package com.example.demo.services;

import org.springframework.stereotype.Service;

import com.example.demo.entities.Query;

@Service
public class Parser {

	Query query = new Query();
	
	Query ParserString(String parser){
		
		Query query = new Query();
		Boolean join = false;
		Boolean projection = false;
		
		String[] aux =  parser.split(" ");
		
		//verifica o retorno do grafo
		for (String string : aux) {
			if(string.contains("join")) {
				join = true;
			}
			if(string.contains("where")) {
				projection = true;
			}
		}

		for (int i = 0; i < aux.length; i++) {
			System.out.printf(aux[i]+" ");
			System.out.println(i);
		}
		
//		System.out.println(aux[9]);
//		System.out.println(aux[9].contains("from"));
//		
	
		int count = 2;
		
		while(!aux[count].contains("from")) {
			
			String data = "";
			
			data = aux[count].replace(",", "");
			query.getColumns().add(data);
			
			count ++;
		}
		
		count++;
		
		query.getJoin().add(aux[count]);
		if(join) {	
			for(int i = count; i < aux.length; i++) {
				if(aux[i].contains("join")) {
					i++;
					query.getJoin().add(aux[i]);
				}
				
				if(aux[i].contains("where")) {
					count = i;
				}
			}
		}
			
		try {
			do {
				count++;
				
				String data = " ";
				
				data = aux[count].concat(aux[count+1]).concat(aux[count+2]);
				
				query.getWhere().add(data);
				
				count += 3;
				
				if(count >= aux.length) {
					count -= 2;
				}
				
			}while((aux[count].contains("and") || (aux[count].contains("or") || (aux[count].contains("in")))));
			
		} catch (Exception e) {
			System.out.println("Error");
		}
		
		
		System.out.println(query.getColumns().toString());
		System.out.println(query.getJoin().toString());
		System.out.println(query.getWhere().toString());
		
		return query;
	}
	
}
